{
  "active": false,
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-23T08:52:44.444Z",
  "id": "QHnElOrVoOpALa6v",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "VAPI voice caller",
  "nodes": [
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n  \"date\": \"\",\n  \"start_time\": \"\",\n  \"end_time\": \"\",\n  \"context\": \"\",\n  \"first_message\": \"\",\n  \"goal\": \"\",\n  \"name\": \"\",\n  \"relationship\": \"\",\n  \"fall_back_plan\": \"\",\n  \"special_requests\": \"\",\n  \"special_request_required\": true\n}"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -460,
        -20
      ],
      "id": "634eecab-ad2a-41e4-b8fa-a3bb22c31af0",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <YOUR_API_KEY>"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"ENTER_VALUE_HERE\",\n  \"assistantId\": \"ENTER_VALUE_HERE\",\n  \"customer\": {\n    \"number\": \"ENTER_VALUE_HERE\"\n  },\n  \"type\": \"outboundPhoneCall\",\n  \"assistant\": {\n        \"name\": \"Will\",\n        \"voice\": {\n          \"provider\": \"playht\",\n          \"voiceId\": \"will\"\n        },\n        \"firstMessageMode\": \"assistant-waits-for-user\",\n        \"backgroundSound\": \"off\",\n        \"firstMessage\": \"{{ $('When Executed by Another Workflow').item.json.first_message }}\",\n        \"model\": {\n        \"provider\": \"openai\",\n        \"model\": \"gpt-3.5-turbo\",\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": \"{{ $json.message.content.vapi_voice_call_context_prompt }}. If they ask for a call back number, they can reach me at 604-123-4567, and my email is email@gmail.com\"\n        }]\n      }\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        120,
        -20
      ],
      "id": "d2fede5e-c82f-44ab-b5ec-e7476bb921e0",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "=  https://api.vapi.ai/call/{{ $json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <YOUR_API_KEY>"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        360,
        -20
      ],
      "id": "83acbdf8-c795-4aaf-ab2a-0254c3814a38",
      "name": "HTTP Request1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        580,
        -20
      ],
      "id": "85a9e80f-adbb-481c-838b-034d087ffdd3",
      "name": "Wait",
      "webhookId": "59fb23df-b7cd-4984-bb43-6b915413af49"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6317e9c3-fc74-4080-b8af-f24a00c1789b",
              "leftValue": "={{ $json.status }}",
              "rightValue": "ended",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        800,
        -20
      ],
      "id": "aa103c55-9e11-4b24-bcc0-ca7f0e3bbbac",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33999b2c-11b6-41b4-b2c0-9ba40d2cf3f7",
              "name": "call_transcript",
              "value": "={{ $json.transcript }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1100,
        -20
      ],
      "id": "67bcc47d-cdd7-443c-bea5-f1026d3e0bcc",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You're an intelligent voice AI bot that is fantastic at creating prompts and opening call ines for Vapi outbound calls to schedule all types of meetings and appointments, such as barbershops, dinners, etc. for your client Jono.\n\n##Rules\n- The voice agent must sound happy, nice and upbeat. The conversation should be more casual.\n- The voice agent must be as detailed as possible so that Vapi can understand everything about the call and context.\n- Please enter in the backup plan if the goal cannot be met. If this is not provided, then the backup should be to call the place back to re-schedule.\nMake sure to structure the data strictly according to the JSON format provided",
              "role": "system"
            },
            {
              "content": "=Please create a Vapi opening line and call prompt for this type of call:\n {{ $json.context }}\nDate: {{ $json.date }} (if needed)\nStart time: {{ $json.start_time }} (if needed)\nEnd Time: {{ $json.end_time }} (if needed)\nThese times are a range, where I'm available within\nFirst Message: {{ $json.first_message }} (this is just for additional context)\nSpecial Requests: {{ $json.special_requests }}\nIs Special Request Required?\nGoal: {{ $json.goal }}\nName of place you're calling: {{ $json.name }}\nFriend or business: {{ $json.relationship }}\nFall Back Plan: {{ $json.fall_back_plan }}\nContext: {{ $json.context }}\n\n##Context\n- You are an AI voice agent making an outbound call on behalf of you client Jono\n- NEVER under any circumstances pretend like you're working or representing {{ $json.name }}. You're only representing Jono.\n- Your goal is: {{ $json.goal }}\n- The opening line should be the first thing that's said. For example: \"Hello, I'm giving {{ $json.name }} because I'm looking to make a dinner reservation\""
            },
            {
              "content": "Strictly output the response in valid JSON format in 2 text fields. DO NOT PUT THIS INTO AN OBJECT. Only use the two text fields as exactly shown below:\n{\n  \"vapi_voice_call_first_message\": \"\",\n  \"vapi_voice_call_context_prompt\": \"\"\n}\n\nEnsure the response is correctly formatted as JSON, including the curly braces, key names, and values. Do not omit or modify any part of the structure.\n",
              "role": "assistant"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -240,
        -20
      ],
      "id": "b2e8467a-84ab-4039-b8a1-912a4157ce65",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "content": "Objectif :\nCréer et déclencher un appel téléphonique automatisé via Vapi.ai avec un agent vocal AI basé sur GPT-4.\n\nFonctionnement :\n\nReçoit des infos (heure, contexte, but de l'appel, plan B, demandes spéciales…).\n\nGénère dynamiquement un prompt et un message d’intro pour l’agent vocal via OpenAI.\n\nLance un appel via l’API Vapi.ai.\n\nAttends que l’appel finisse, récupère la transcription.\n\nApplique une logique conditionnelle selon si l’appel a “terminé” ou non.\n\nUtilisation :\n✅ Utilisation avancée pour un voice bot AI en appels sortants. Parfait pour de la réservation, confirmation ou suivi client automatisé.",
        "height": 380,
        "width": 1480
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        240
      ],
      "id": "cbb5528d-0317-46f9-8526-21fe248e05b9",
      "name": "Sticky Note"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "date": "February 17th 2025",
          "start_time": "5pm",
          "end_time": "8pm",
          "context": "The user is looking to book a dinner reservation tonight between 5-8pm at Tandoori chicken to eat at the restaurant.",
          "first_message": "Hello, I'd like to book a dinner reservation tonight.",
          "goal": "To book a dinner reservation tonight between 5-8pm",
          "name": "Tandoori Chicken",
          "relationship": "business",
          "fall_back_plan": "Please do not book the dinner reservation, instead politely mention that you'll have to call back in 10 minutes if you decide to book",
          "special_requests": "I'd like to get a table by the window",
          "special_request_required": true
        }
      }
    ],
    "OpenAI": [
      {
        "json": {
          "index": 0,
          "message": {
            "role": "assistant",
            "content": {
              "vapi_voice_call_first_message": "Hello, I'm calling Tandoori Chicken because I'm looking to make a dinner reservation.",
              "vapi_voice_call_context_prompt": "Hi there! I'm an AI voice agent reaching out on behalf of my client, Jono. We're looking to book a dinner reservation at Tandoori Chicken for tonight, February 17th, 2025, anytime between 5 PM and 8 PM. Jono would love to have a table by the window if that's possible. If window seats aren't available, that's fine; we just want to ensure a spot within that timeframe. If we can't secure a reservation right away, please let us know, and we'll call back in 10 minutes to try again."
            },
            "refusal": null
          },
          "logprobs": null,
          "finish_reason": "stop"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-23T08:52:44.444Z",
  "versionId": "d5165b02-b424-41e5-88ad-468e060e2b2d"
}