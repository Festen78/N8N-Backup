{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Extract base URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check robots": {
      "main": [
        [
          {
            "node": "If sitemap exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If sitemap exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If sitemap exists": {
      "main": [
        [
          {
            "node": "Get sidemap",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "sitemap.xml",
            "type": "main",
            "index": 0
          },
          {
            "node": "sitemap_index.xml",
            "type": "main",
            "index": 0
          },
          {
            "node": "site-map.xml",
            "type": "main",
            "index": 0
          },
          {
            "node": "sitemap.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "find URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "List all URLS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "List all the URLS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "find URLs": {
      "main": [
        [
          {
            "node": "GET URLs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET URLs": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET XML": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sitemap.xml": {
      "main": [
        [
          {
            "node": "Get sidemap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sitemap_index.xml": {
      "main": [
        [
          {
            "node": "Get sidemap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "site-map.xml": {
      "main": [
        [
          {
            "node": "Get sidemap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sitemap.json": {
      "main": [
        [
          {
            "node": "Get sidemap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List all URLS": {
      "main": [
        [
          {
            "node": "GET URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List all the URLS": {
      "main": [
        [
          {
            "node": "GET XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for XML or URL": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract base URL": {
      "main": [
        [
          {
            "node": "Check robots",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check the character amount": {
      "main": [
        [
          {
            "node": "Bigger than 50K?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bigger than 50K?": {
      "main": [
        [
          {
            "node": "Split in 50k chunks1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split in 50k chunks1": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sidemap": {
      "main": [
        [
          {
            "node": " get sitemap data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " get sitemap data1": {
      "main": [
        [
          {
            "node": "Check for XML or URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Strip text": {
      "main": [
        [
          {
            "node": "Check the character amount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Strip text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET URLs1": {
      "main": [
        [
          {
            "node": "Markdown1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check the character amount1": {
      "main": [
        [
          {
            "node": "Bigger than 50K?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bigger than 50K?1": {
      "main": [
        [
          {
            "node": "Split in 50k chunks",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split in 50k chunks": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Strip text1": {
      "main": [
        [
          {
            "node": "Check the character amount1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown1": {
      "main": [
        [
          {
            "node": "Strip text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-31T08:13:10.701Z",
  "id": "wmF4N3NbkpNm9I1p",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "scrap url",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -3560,
        200
      ],
      "id": "56166c08-ff99-4bdf-b886-96a16b8ca581",
      "name": "When chat message received",
      "webhookId": "01600a51-c3cf-4a4f-9059-697be236ed69"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa9156b4-7556-4229-938b-38e0d9391015",
              "leftValue": "={{ $json.data }}",
              "rightValue": "sitemap",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2780,
        200
      ],
      "id": "e3b6f3ce-8c0d-4e16-86c9-d2b8f53b8889",
      "name": "If sitemap exists"
    },
    {
      "parameters": {
        "url": "={{ $json.message.content.baseUrl }}/robots.txt",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3000,
        200
      ],
      "id": "b1b50f30-47fa-4623-90eb-75323d96a588",
      "name": "Check robots",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        -460,
        380
      ],
      "id": "80e843a4-6e43-4b84-8bc7-7f4f365266a0",
      "name": "XML",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b9a4d5b0-2385-49cd-9228-df1c56284cf1",
              "leftValue": "={{ $json.message.content.pathway }}",
              "rightValue": "url",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1040,
        180
      ],
      "id": "aff49564-43b4-46ca-b050-778146dd4d7f",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg",
          "mode": "list",
          "cachedResultName": "Scrape webiste for free",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "List of URLs": "={{ $('List all URLS').all().map(item => item.json.url).join('\\n') }}\n",
            "Website URL": "={{ $('Extract base URL').first().json.message.content.baseUrl }}",
            "content Chunk 1": "={{ $json.chunk_1 }}",
            "content Chunk 2": "={{ $json.chunk_2 }}",
            "content Chunk 3": "={{ $json.chunk_3 }}",
            "content Chunk 4": "={{ $json.chunk_4 }}",
            "content Chunk 5": "={{ $json.chunk_5 }}",
            "content Chunk 6": "={{ $json.chunk_6 }}",
            "content Chunk 7": "={{ $json.chunk_7 }}",
            "content Chunk 8": "={{ $json.chunk_8 }}",
            "content Chunk 9": "={{ $json.chunk_9 }}",
            "content Chunk 10": "={{ $json.chunk_10 }}",
            "Sidemap": "={{ $('Get sidemap').all()[0].json.message.content.sitemap }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "Website URL",
              "displayName": "Website URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sidemap",
              "displayName": "Sidemap",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "XML",
              "displayName": "XML",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "List of URLs",
              "displayName": "List of URLs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 1",
              "displayName": "content Chunk 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 2",
              "displayName": "content Chunk 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 3",
              "displayName": "content Chunk 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 4",
              "displayName": "content Chunk 4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 5",
              "displayName": "content Chunk 5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 6",
              "displayName": "content Chunk 6",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 7",
              "displayName": "content Chunk 7",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 8",
              "displayName": "content Chunk 8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 9",
              "displayName": "content Chunk 9",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 10",
              "displayName": "content Chunk 10",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        500,
        -80
      ],
      "id": "d958b05e-7e13-4f4a-a817-8e37af6e7e6a",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G9J66r6X95onAdYf",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function extractAllLocs(data) {\n    const locs = [];\n\n    function findLocs(obj) {\n        if (!obj) return;\n\n        // If it's an object, check for loc key and continue recursion\n        if (typeof obj === 'object') {\n            for (const key in obj) {\n                if (key === 'loc' && typeof obj[key] === 'string') {\n                    locs.push(obj[key]);\n                } else {\n                    findLocs(obj[key]);\n                }\n            }\n        }\n        // If it's an array, loop through each item\n        else if (Array.isArray(obj)) {\n            obj.forEach(findLocs);\n        }\n    }\n\n    findLocs(data);\n    return locs.map(url => ({ url }));\n}\n\n// Usage in n8n:\nconst data = $input.first().json.urlset; // Extracting from the urlset\n\nconst urls = extractAllLocs(data);\n\nreturn urls.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        380
      ],
      "id": "60e8bfab-d292-4f60-be49-ea1039a929ce",
      "name": "find URLs"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1
            }
          },
          "allowUnauthorizedCerts": false,
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        0
      ],
      "id": "375a7829-b0ff-4ab0-b08f-52f39e7a7b96",
      "name": "GET URLs"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        380
      ],
      "id": "a1a87994-3f4e-4c55-9a21-97f19ff5f3f6",
      "name": "GET XML",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Extract base URL').item.json.message.content.baseUrl }}/sitemap.xml",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2360,
        -20
      ],
      "id": "fd11b9a4-0244-42c4-a31e-08585e1b0cf2",
      "name": "sitemap.xml",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Extract base URL').item.json.message.content.baseUrl }}/sitemap_index.xml",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2360,
        120
      ],
      "id": "5db502a7-7a16-41ea-92c7-7e4f4a896095",
      "name": "sitemap_index.xml",
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Extract base URL').item.json.message.content.baseUrl }}/site-map.xml",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2360,
        260
      ],
      "id": "a0b5f131-9929-4ff0-b7ab-c330a2cfcfcf",
      "name": "site-map.xml",
      "executeOnce": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Extract base URL').item.json.message.content.baseUrl }}/sitemap.json",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2360,
        400
      ],
      "id": "a478ac03-7b41-425d-84ea-d91b93a815b4",
      "name": "sitemap.json",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const data = $('Check for XML or URL').first().json.message;\n\nconst content = data.content;\n\nconst urls = [];\n\nObject.keys(content).forEach(key => {\n  if (key.startsWith('loc')) {\n    urls.push({ json: { url: content[key] } });\n  }\n});\n\nreturn urls;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        0
      ],
      "id": "0a6cbb41-8742-4c01-98fb-1b961fef57a3",
      "name": "List all URLS"
    },
    {
      "parameters": {
        "jsCode": "const content = $input.first().json.message.content;\n\n// Extract all `loc1`, `loc2`, etc., into an array\nconst urls = Object.values(content);\n\n// Return each URL as a separate item\nreturn urls.map(url => ({\n  json: { url }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        380
      ],
      "id": "f36bf461-8301-4930-bed1-dc91091a8d66",
      "name": "List all the URLS"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=extract each of the seperate loc elements and return a JSON object as below, make sure that the first key value pair identifies if the pathways are regular urls or xml:\n\n{\n\"pathway\": \"xml\"\n\"loc1\":\"example1.com.xml\",\n\"loc2\":\"example2.com.xml\",\n\"loc3\":\"example3.com.xml\"\n}\n\nor\n\n\n{\n\"pathway\": \"url\"\n\"loc1\":\"example1.com\",\n\"loc2\":\"example2.com\",\n\"loc3\":\"example3.com\"\n}\n",
              "role": "system"
            },
            {
              "content": "={{ $json.data }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1340,
        180
      ],
      "id": "3a38e74e-0326-4f28-b078-a097c031af37",
      "name": "Check for XML or URL",
      "credentials": {
        "openAiApi": {
          "id": "v1DLTzLc10CcUL14",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a URL normalization assistant. Your task is to convert any input URL into its **standard base URL format** and return the result as JSON.\n\nNormalization Rules:\n1. Ensure the URL starts with `https://` (add it if missing).\n2. Remove `www.` unless it is critical for the domain's identity.\n3. Remove everything after the domain (paths, query strings, fragments).\n4. Preserve subdomains (e.g., `blog.example.com` → `https://blog.example.com`).\n5. Convert the domain part to lowercase.\n6. Output the result in JSON format as:\n   {\n     \"baseUrl\": \"https://example.com\"\n   }\n\nExamples:\nInput: `n8n.io/path/page`\nOutput: `{ \"baseUrl\": \"https://n8n.io\" }`\n\nInput: `http://www.Example.COM/query=1`\nOutput: `{ \"baseUrl\": \"https://example.com\" }`\n\nReturn **only the JSON object** in the output. No additional text or explanations.\n",
              "role": "system"
            },
            {
              "content": "={{ $json.chatInput }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3360,
        200
      ],
      "id": "dba79912-aab5-4783-b40e-a991b5980d13",
      "name": "Extract base URL",
      "credentials": {
        "openAiApi": {
          "id": "v1DLTzLc10CcUL14",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const text = $input.first().json.content; \nconst charCount = text.length;\n\nreturn [\n  {\n    json: {\n      characterCount: charCount\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        0
      ],
      "id": "ddaf20b9-3dbb-4b5a-8b1e-96fa6cbbd5bf",
      "name": "Check the character amount"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cfa49a8-1505-4775-9b3c-277ef0c12323",
              "leftValue": "={{ $json.characterCount }}",
              "rightValue": 50000,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        0
      ],
      "id": "538debee-2cae-4d05-9fcb-35ecd18baafa",
      "name": "Bigger than 50K?"
    },
    {
      "parameters": {
        "jsCode": "const text = $('Strip text').first().json.content;\nconst chunkSize = 50000;\nconst output = {};\n\nfor (let i = 0; i < text.length; i += chunkSize) {\n  const chunkNumber = Math.floor(i / chunkSize) + 1;\n  output[`chunk_${chunkNumber}`] = text.slice(i, i + chunkSize);\n}\n\nreturn [\n  {\n    json: output\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -80
      ],
      "id": "40e728cf-e5d7-412d-8d8f-bccb4f2f217e",
      "name": "Split in 50k chunks1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg",
          "mode": "list",
          "cachedResultName": "Untitled spreadsheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "List of URLs": "={{ $('List all URLS').all().map(item => item.json.url).join('\\n') }}\n",
            "Website URL": "={{ $('Extract base URL').first().json.message.content.baseUrl }}",
            "content Chunk 1": "={{ $('Strip text').item.json.content }}",
            "Sidemap": "={{ $('Get sidemap').all()[0].json.message.content.sitemap }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "Website URL",
              "displayName": "Website URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sidemap",
              "displayName": "Sidemap",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "XML",
              "displayName": "XML",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "List of URLs",
              "displayName": "List of URLs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 1",
              "displayName": "content Chunk 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 2",
              "displayName": "content Chunk 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 3",
              "displayName": "content Chunk 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 4",
              "displayName": "content Chunk 4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 5",
              "displayName": "content Chunk 5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 6",
              "displayName": "content Chunk 6",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 7",
              "displayName": "content Chunk 7",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 8",
              "displayName": "content Chunk 8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 9",
              "displayName": "content Chunk 9",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 10",
              "displayName": "content Chunk 10",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        320,
        100
      ],
      "id": "78d085c3-19cf-499a-8163-1122d84eea5f",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G9J66r6X95onAdYf",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "output the sitemap value in json format of this structure:\n\n{\"sitemap\":\"www.example.com/sitemap.xml:}\n\nNote, only output one single sitemap value. If there are multiple, make the best choice on which is the correct one to use",
              "role": "system"
            },
            {
              "content": "={{ $json.data }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1880,
        180
      ],
      "id": "09978617-47b7-4b81-8416-47298e02672b",
      "name": "Get sidemap",
      "credentials": {
        "openAiApi": {
          "id": "v1DLTzLc10CcUL14",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.message.content.sitemap }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1540,
        180
      ],
      "id": "1eb0b93a-adb8-40ad-a5b7-a79c9c254936",
      "name": " get sitemap data1"
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst items = $input.all();\n\n// Function to convert markdown to plain text\nfunction convertMarkdownToPlainText(markdown) {\n  // Ensure we're working with a string\n  let plainText = String(markdown);\n  \n  // Remove links: [text](URL)\n  plainText = plainText.replace(/\\[([^\\]]+)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove images: ![alt text](URL)\n  plainText = plainText.replace(/!\\[([^\\]]*)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove headers: # Header\n  plainText = plainText.replace(/(#+)\\s*(.*)/g, '$2');\n  \n  // Remove bold and italic formatting\n  plainText = plainText.replace(/\\*\\*|\\*|__|_/g, '');\n  \n  // Remove HTML special characters\n  plainText = plainText.replace(/([<>])/g, '');\n  \n  // Remove extra line breaks\n  plainText = plainText.replace(/\\n\\s*\\n/g, '\\n');\n  \n  // Remove bullet points or numbered list formatting\n  plainText = plainText.replace(/^\\s*[-*+]\\s+/gm, '');\n  \n  return plainText.trim();\n}\n\n// Process all items and combine them with page numbers and clear formatting\nconst combinedContent = items.map((item, index) => {\n  let content;\n  if (typeof item === 'object' && item !== null) {\n    content = item.data || item.content || item.text || JSON.stringify(item);\n  } else {\n    content = String(item);\n  }\n  \n  const pageNumber = index + 1;\n  const processedContent = convertMarkdownToPlainText(content);\n  \n  return `Page ${pageNumber}\\n──────────────────\\n\\n${processedContent}\\n\\n\\n`;\n}).join('\\n\\n'); // Double line breaks between pages\n\n// Return with both raw content and formatted content\nreturn [{\n  json: {\n    content: combinedContent,\n    rawContent: items.map((item, index) => ({\n      pageNumber: index + 1,\n      content: convertMarkdownToPlainText(String(item.data || item.content || item.text || item))\n    }))\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        0
      ],
      "id": "49ac7d79-2abb-45cc-a727-6586bede56a2",
      "name": "Strip text"
    },
    {
      "parameters": {
        "html": "={{ $json.data }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        -460,
        0
      ],
      "id": "bd5cab9f-1117-44b7-8dc8-819b5116bcc2",
      "name": "Markdown",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg",
          "mode": "list",
          "cachedResultName": "Scrape webiste for free",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "XML": "={{ $('List all the URLS').all().map(item => item.json.url).join('\\n') }}",
            "List of URLs": "={{ $('find URLs').all().map(item => item.json.url).join('\\n') }}\n",
            "Website URL": "={{ $('Extract base URL').first().json.message.content.baseUrl }}",
            "content Chunk 1": "={{ $json.chunk_1 }}",
            "content Chunk 2": "={{ $json.chunk_2 }}",
            "content Chunk 3": "={{ $json.chunk_3 }}",
            "content Chunk 4": "={{ $json.chunk_4 }}",
            "content Chunk 5": "={{ $json.chunk_5 }}",
            "content Chunk 6": "={{ $json.chunk_6 }}",
            "content Chunk 7": "={{ $json.chunk_7 }}",
            "content Chunk 8": "={{ $json.chunk_8 }}",
            "content Chunk 9": "={{ $json.chunk_9 }}",
            "content Chunk 10": "={{ $json.chunk_10 }}",
            "Sidemap": "={{ $('Get sidemap').all()[0].json.message.content.sitemap }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "Website URL",
              "displayName": "Website URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sidemap",
              "displayName": "Sidemap",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "XML",
              "displayName": "XML",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "List of URLs",
              "displayName": "List of URLs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 1",
              "displayName": "content Chunk 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 2",
              "displayName": "content Chunk 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 3",
              "displayName": "content Chunk 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 4",
              "displayName": "content Chunk 4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 5",
              "displayName": "content Chunk 5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 6",
              "displayName": "content Chunk 6",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 7",
              "displayName": "content Chunk 7",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 8",
              "displayName": "content Chunk 8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 9",
              "displayName": "content Chunk 9",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 10",
              "displayName": "content Chunk 10",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1060,
        280
      ],
      "id": "f3883eae-8966-4750-b048-85924390f035",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G9J66r6X95onAdYf",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1
            }
          },
          "allowUnauthorizedCerts": false,
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -100,
        380
      ],
      "id": "a0bc41f0-bbfa-4229-9262-a6e3f90b9434",
      "name": "GET URLs1"
    },
    {
      "parameters": {
        "jsCode": "const text = $input.first().json.content; \nconst charCount = text.length;\n\nreturn [\n  {\n    json: {\n      characterCount: charCount\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        380
      ],
      "id": "0832a010-fbea-4f59-9e69-8d42e4662c46",
      "name": "Check the character amount1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cfa49a8-1505-4775-9b3c-277ef0c12323",
              "leftValue": "={{ $json.characterCount }}",
              "rightValue": 50000,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        380
      ],
      "id": "30724e64-859e-490a-a974-c383640aa1b6",
      "name": "Bigger than 50K?1"
    },
    {
      "parameters": {
        "jsCode": "const text = $('Strip text1').first().json.content;\nconst chunkSize = 50000;\nconst output = {};\n\nfor (let i = 0; i < text.length; i += chunkSize) {\n  const chunkNumber = Math.floor(i / chunkSize) + 1;\n  output[`chunk_${chunkNumber}`] = text.slice(i, i + chunkSize);\n}\n\nreturn [\n  {\n    json: output\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        280
      ],
      "id": "d8ad1978-63c7-4f44-8249-e18235167c83",
      "name": "Split in 50k chunks"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg",
          "mode": "list",
          "cachedResultName": "Untitled spreadsheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1HjUSIQwi9NOb_STLWnlphjGAbDChYabzizzZDlU_iDg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "XML": "={{ $('List all the URLS').all().map(item => item.json.url).join('\\n') }}",
            "List of URLs": "={{ $('find URLs').all().map(item => item.json.url).join('\\n') }}\n",
            "Website URL": "={{ $('Extract base URL').first().json.message.content.baseUrl }}",
            "content Chunk 1": "={{ $('Strip text1').item.json.content }}",
            "Sidemap": "={{ $('Get sidemap').all()[0].json.message.content.sitemap }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "Website URL",
              "displayName": "Website URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sidemap",
              "displayName": "Sidemap",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "XML",
              "displayName": "XML",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "List of URLs",
              "displayName": "List of URLs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 1",
              "displayName": "content Chunk 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content Chunk 2",
              "displayName": "content Chunk 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 3",
              "displayName": "content Chunk 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 4",
              "displayName": "content Chunk 4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 5",
              "displayName": "content Chunk 5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 6",
              "displayName": "content Chunk 6",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 7",
              "displayName": "content Chunk 7",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 8",
              "displayName": "content Chunk 8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 9",
              "displayName": "content Chunk 9",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content Chunk 10",
              "displayName": "content Chunk 10",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        860,
        500
      ],
      "id": "76c86107-94d4-44b5-849e-09e31dbfa43e",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G9J66r6X95onAdYf",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst items = $input.all();\n\n// Function to convert markdown to plain text\nfunction convertMarkdownToPlainText(markdown) {\n  // Ensure we're working with a string\n  let plainText = String(markdown);\n  \n  // Remove links: [text](URL)\n  plainText = plainText.replace(/\\[([^\\]]+)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove images: ![alt text](URL)\n  plainText = plainText.replace(/!\\[([^\\]]*)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove headers: # Header\n  plainText = plainText.replace(/(#+)\\s*(.*)/g, '$2');\n  \n  // Remove bold and italic formatting\n  plainText = plainText.replace(/\\*\\*|\\*|__|_/g, '');\n  \n  // Remove HTML special characters\n  plainText = plainText.replace(/([<>])/g, '');\n  \n  // Remove extra line breaks\n  plainText = plainText.replace(/\\n\\s*\\n/g, '\\n');\n  \n  // Remove bullet points or numbered list formatting\n  plainText = plainText.replace(/^\\s*[-*+]\\s+/gm, '');\n  \n  return plainText.trim();\n}\n\n// Process all items and combine them with page numbers and clear formatting\nconst combinedContent = items.map((item, index) => {\n  let content;\n  if (typeof item === 'object' && item !== null) {\n    content = item.data || item.content || item.text || JSON.stringify(item);\n  } else {\n    content = String(item);\n  }\n  \n  const pageNumber = index + 1;\n  const processedContent = convertMarkdownToPlainText(content);\n  \n  return `Page ${pageNumber}\\n──────────────────\\n\\n${processedContent}\\n\\n\\n`;\n}).join('\\n\\n'); // Double line breaks between pages\n\n// Return with both raw content and formatted content\nreturn [{\n  json: {\n    content: combinedContent,\n    rawContent: items.map((item, index) => ({\n      pageNumber: index + 1,\n      content: convertMarkdownToPlainText(String(item.data || item.content || item.text || item))\n    }))\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        380
      ],
      "id": "f8eb0b72-a847-4092-847f-9d7204e54719",
      "name": "Strip text1"
    },
    {
      "parameters": {
        "html": "={{ $json.data }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        80,
        380
      ],
      "id": "055e8270-9517-4e78-a53f-41ac54969305",
      "name": "Markdown1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Guess the sidemap\n",
        "height": 720,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2580,
        -120
      ],
      "id": "a193820d-59fb-4dff-83e6-ad3ace155808",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Input the URL\n",
        "height": 260,
        "width": 200,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3600,
        120
      ],
      "id": "6e3ea9c7-786d-44c2-99eb-217f9c0512de",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Extract base URL\n\n",
        "height": 260,
        "width": 300,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3380,
        120
      ],
      "id": "20558239-0bb8-4919-97af-d2f48ef61355",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Check for robots.txt\n\n",
        "height": 260,
        "width": 440,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3060,
        120
      ],
      "id": "9be05fb1-640d-410b-9cae-1c91acd20329",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Get the Sidemap\n\n\n",
        "height": 260,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1980,
        120
      ],
      "id": "5ed77fe0-4a8f-4eed-843f-128fe781a710",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Check for XML or URL\n\n",
        "height": 260,
        "width": 480,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1360,
        120
      ],
      "id": "5cf5315b-e93b-4ce6-b7ee-c139c8e956ec",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Get URLs\n\n",
        "height": 260,
        "width": 340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -840,
        -80
      ],
      "id": "5aa5dc6e-0b4b-4bf2-b8ba-5900bec70c46",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Clean text\n",
        "height": 260,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        -80
      ],
      "id": "2307327a-7fc5-40ab-9196-3f281cdd5fac",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Check the character amount\n\n\n",
        "height": 260,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        -80
      ],
      "id": "da8a0231-fe8d-42af-9a7e-36d377ef296b",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Check the character amount\n\n\n",
        "height": 260,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        420,
        300
      ],
      "id": "783ba894-b4c8-4249-9140-6adcf9b40e12",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Clean text\n",
        "height": 260,
        "width": 340,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        300
      ],
      "id": "b1c64468-e07b-4601-bc75-0babc9e3097a",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## Get URLs\n\n",
        "height": 260,
        "width": 340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        300
      ],
      "id": "594556de-7b09-4bb2-ad6a-8ee5ba1f40bb",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Get XML Data\n",
        "height": 260,
        "width": 520,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -840,
        300
      ],
      "id": "156cb61d-1d5f-4ac4-8eb6-8a72f3692766",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Add all scraped data\n\n\n",
        "height": 420,
        "width": 440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        260,
        -160
      ],
      "id": "9bc3ecc5-460b-4e8b-b909-66c132f2cc19",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## Add all scraped data\n\n\n",
        "height": 460,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        200
      ],
      "id": "788c17d2-ff3b-4e8e-ac18-2d39060549b1",
      "name": "Sticky Note14"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-31T08:23:14.000Z",
  "versionId": "a8b05a2c-1974-4830-acc6-572cf9393abf"
}